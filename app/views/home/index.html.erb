<!DOCTYPE html>
<html>
<head>
  <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %>
  <!--  <script src="https://cdn.jsdelivr.net/npm/p5@1.2.0/lib/p5.js"></script>-->
  <meta charset="utf-8" />
  <title>Demo</title>
  <style>
      body {
          margin: 0;
          padding: 0;
          overflow: hidden;
          background-color: #f0f0f0;
      }
  </style>
</head>
<body>
<main></main>

<script>
    class Bubble {
        constructor(x, y, diameter, name) {
            this.x = x;
            this.y = y;
            this.diameter = diameter;
            this.radius = diameter / 2;
            this.name = name;

            this.over = false;
        }

        // Check if mouse is over the bubble
        rollover(px, py) {
            let d = dist(px, py, this.x, this.y);
            this.over = d < this.radius;
        }

        // Display the Bubble
        display() {
            stroke('red');
            strokeWeight(0.8);
            noFill();
            ellipse(this.x, this.y, this.diameter, this.diameter);
            if (this.over) {
                fill(0);
                textAlign(CENTER);
                text(this.name, this.x, this.y + this.radius + 20);
            }
        }
    }

    // var data; // Global object to hold results from the loadJSON call
    let bubbles = []; // Global array to hold all bubble objects
    let url = '/assets/bubbles.json'

    let data = { "bubbles":
            [ { "position": { "x": 160, "y": 103 }, "diameter": 43.19838, "label": "Happy" },
                { "position": { "x": 372, "y": 137 }, "diameter": 52.42526, "label": "Sad" }
            ]
    }

    // Put any asynchronous data loading in preload to complete before "setup" is run
    // function preload() {
    //     fetch(url).then(function(response){
    //         return response.text().then(function(text) {
    //             console.log(text);
    //             data = JSON.parse(text);
    //             let a = data;
    //         });
    //     });
    // }



    // Convert saved Bubble data into Bubble Objects
    function loadData() {
        let bubbleData = data?.bubbles;
        if(bubbleData) {
            for (let i = 0; i < bubbleData.length; i++) {
                // Get each object in the array
                let bubble = bubbleData[i];
                // Get a position object
                let position = bubble['position'];
                // Get x,y from position
                let x = position['x'];
                let y = position['y'];

                // Get diameter and label
                let diameter = bubble['diameter'];
                let label = bubble['label'];

                // Put object in array
                bubbles.push(new Bubble(x, y, diameter, label));
            }
        }
    }

    // Create a new Bubble each time the mouse is clicked.
    function mousePressed() {
        // Add diameter and label to bubble
        let diameter = random(40, 80);
        let label = 'New Label';

        // Append the new JSON bubble object to the array
        bubbles.push(new Bubble(mouseX, mouseY, diameter, label));

        // Prune Bubble Count if there are too many
        // if (bubbles.length > 10) {
        //     bubbles.shift(); // remove first item from array
        // }
    }


    let img; // Declare variable 'img'.

    function setup() {
        createCanvas(720, 400);
        img = loadImage('https://st.depositphotos.com/1373150/3567/i/600/depositphotos_35670209-stock-photo-3d-illustration-of-a-neuron.jpg'); // Load the image
        loadData();
    }

    function draw() {
        // Displays the image at its actual size at point (0,0)
        image(img, 0, 0);

        // Display all bubbles
        for (let i = 0; i < bubbles.length; i++) {
            bubbles[i].display();
            bubbles[i].rollover(mouseX, mouseY);
        }

        // Label directions at bottom
        textAlign(LEFT);
        fill(0);
        text('Click to add bubbles.', 10, height - 10);
    }
</script>
</body>
</html>